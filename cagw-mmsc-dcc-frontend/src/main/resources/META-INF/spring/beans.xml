<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring" xmlns:q0="http://nsn.com/ossbss/charge.once/wsdl/entity/Tis/xsd/1"
	xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

	<import resource="classpath:META-INF/cagw-core/beans.xml" />

	<!-- Retrieve loaded configuration properties -->
	<bean id="cfg" class="com.ericsson.raso.cac.config.ConfigService" />
	<bean id="cgProperties" class="com.ericsson.raso.cac.config.ComponentPropertiesBean">
		<constructor-arg name="config" ref="cfg" />
		<constructor-arg name="component" value="Cagw_EndPoint" />
	</bean>
	<context:property-placeholder
		properties-ref="cgProperties" />
	
	<bean id="clusterService" class="com.satnar.common.ClusterService" />

	<bean id="waterGate" class="com.satnar.common.WaterGate">
		<constructor-arg name="frontend"
			value="#{configservice.getValue('Water_Gate','frontend')}" />
		<constructor-arg name="nodeThreshold"
			value="#{configservice.getValue('Water_Gate','nodeThreshold')}" />
		<constructor-arg name="systemWideThreshold"
			value="#{configservice.getValue('Water_Gate','systemWideThreshold')}" />
	</bean>

	<bean id="mmscFe"
		class="com.ericsson.raso.cac.diameter.dcc.server.viettel.SpringHelper" />

	<!-- This is a reference to ApplicationRequestListener in DccService and 
		also responsible to send request to BE -->
	<bean id="requestHandler"
		class="com.ericsson.raso.cac.diameter.dcc.server.viettel.RequestHandler">
		<constructor-arg name="camelContext" ref="com.ericsson.raso.cac.mmsdccfe" />
	</bean>

	<bean id="dccSrvcEndPoint"
		class="com.satnar.charging.diameter.dcc.server.DccServiceEndpoint">
	</bean>

	<!-- To listen for requests from DCC service -->
	<!-- <bean id="dccMmsc1" class="com.ericsson.raso.cac.diameter.dcc.server.viettel.DccService" 
		init-method="start" destroy-method="stop"> <constructor-arg name="serviceConfig" 
		value="#{cfg.getProperties('Dcc_Props1')}" /> </bean> -->

	<bean id="dccMmsc1"
		class="com.ericsson.raso.cac.diameter.dcc.server.viettel.DccService">
		<constructor-arg name="serviceConfig"
			value="#{cfg.getProperties('Dcc_Props1')}" />
	</bean>

	<bean id="gsonCcr" class="org.apache.camel.component.gson.GsonDataFormat">
		<property name="unmarshalType" value="com.ericsson.pps.diameter.dccapi.command.Ccr" />
	</bean>


	<bean id="gsonCca" class="org.apache.camel.component.gson.GsonDataFormat">
		<property name="unmarshalType" value="com.ericsson.pps.diameter.dccapi.command.Cca" />
	</bean>

	<!-- For Http communication with backend -->
	<bean id="http4" class="org.apache.camel.component.http4.HttpComponent">
		<property name="camelContext" ref="com.ericsson.raso.cac.mmsdccfe" />
		<property name="maxTotalConnections" value="500" />
		<property name="connectionsPerRoute" value="500" />
		<!-- <property name="connectionTimeToLive" value="1000" /> -->
	</bean>

	<!-- Routing request to cagw-backend over REST -->
	<camel:camelContext id="com.ericsson.raso.cac.mmsdccfe"
		xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="properties" location="ref:cgProperties" />
		<threadPoolProfile id="defaultProfile"
			defaultProfile="true" poolSize="1200" maxPoolSize="1200"
			maxQueueSize="10" />
		<threadPool id="mmsdcc-frontend" poolSize="1200"
			maxPoolSize="1200" threadName="mmsdcc-frontend" camelContextId="com.ericsson.raso.cac.mmsdccfe" />
		<camel:route id="com.ericsson.raso.cac.mmsdccfe">
			<camel:from uri="seda:cagw-backend?concurrentConsumers=500" />
			<camel:doTry>
				<camel:marshal ref="gsonCcr" />
				<camel:log message="Entered mmsc front end camel route:${body}" />
				<setHeader headerName="CamelHttpMethod">
					<constant>POST</constant>
				</setHeader>
				<camel:log message="BackendUrl:${{Mmsc_Cagw_BackendUrl}}"/>
				<camel:to uri="{{Mmsc_Cagw_BackendUrl}}">
				</camel:to>
				<camel:log message="Exit MMSC front end camel route:${body}" />
				<camel:unmarshal ref="gsonCca" />
				<camel:doCatch>
					<camel:exception>java.lang.Exception</camel:exception>
					<camel:log message="From MMSC FrontEnd Exception: ${exception.stacktrace}" />
				</camel:doCatch>
				<camel:doFinally>
					<camel:log message="Leave MMSC Frontend:${body}" />
				</camel:doFinally>
				</camel:doTry>
		</camel:route>
	</camel:camelContext>

</beans>
